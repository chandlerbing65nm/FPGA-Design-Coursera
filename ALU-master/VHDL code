LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.NUMERIC_STD.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;

ENTITY ALU IS PORT
	( 
	Op_code : IN STD_LOGIC_VECTOR( 2 DOWNTO 0 );
	A, B : IN STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	Y : OUT STD_LOGIC_VECTOR( 31 DOWNTO 0 ) 
	);
END ALU;

architecture arithmetic of ALU is
signal output : std_logic_vector(31 downto 0);
	begin
		process(A, B, Op_code) begin
			case Op_code is
				when "000" =>
				output <= A;
				when "001" =>
				output <= A + B;
				when "010" =>
				output <= A - B;
				when "011" =>
				output <= A AND B;
				when "100" =>
				output <= A OR B;
				when "101" =>
				output <= A + 1;
				when "110" =>
				output <= A - 1;
				when "111" =>
				output <= B;
				when others =>
				output <= A + B;
			end case;
		end process;
	Y <= output;
	end arithmetic;
